{"ast":null,"code":"import _slicedToArray from\"/Users/hdewey/Documents/repos/IYA/react-mural/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import QrReader from'react-qr-reader';import'./ScanCard.css';// BasicModal Component\nimport Modal from\"react-modal\";import PersonInfo from'../PersonInfo/PersonInfo';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Scanner=function Scanner(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isScanned=_useState2[0],setScan=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),scanData=_useState4[0],setScanData=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),modalIsOpen=_useState6[0],setModalIsOpen=_useState6[1];var setModalIsOpenToTrue=function setModalIsOpenToTrue(){setModalIsOpen(true);};var setModalIsOpenToFalse=function setModalIsOpenToFalse(){setModalIsOpen(false);setScanData(null);setScan(false);};var handleScan=function handleScan(data){if(data){setScan(true);setScanData(data);console.log(data);setModalIsOpenToTrue();}};var handleError=function handleError(err){console.error(err);};return/*#__PURE__*/_jsxs(\"div\",{id:\"scanner\",children:[!modalIsOpen?/*#__PURE__*/_jsx(QrReader,{id:\"reader\",delay:300,onError:handleError,onScan:handleScan,facingMode:\"environment\",style:{width:'100%'}}):/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsxs(Modal,{isOpen:modalIsOpen,id:\"scan-modal\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:setModalIsOpenToFalse,children:\"x\"}),/*#__PURE__*/_jsx(PersonInfo,{scan:scanData,modalIsOpen:modalIsOpen})]})]});};export default Scanner;","map":{"version":3,"sources":["/Users/hdewey/Documents/repos/IYA/react-mural/src/components/Cards/Scan/Scanner.js"],"names":["React","useState","useEffect","QrReader","Modal","PersonInfo","Scanner","isScanned","setScan","scanData","setScanData","modalIsOpen","setModalIsOpen","setModalIsOpenToTrue","setModalIsOpenToFalse","handleScan","data","console","log","handleError","err","error","width"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CAEA,MAAO,gBAAP,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,eAESL,QAAQ,CAAC,KAAD,CAFjB,wCAEbM,SAFa,eAEFC,OAFE,8BAIYP,QAAQ,CAAC,IAAD,CAJpB,yCAIbQ,QAJa,eAIHC,WAJG,8BAMiBT,QAAQ,CAAC,KAAD,CANzB,yCAMbU,WANa,eAMDC,cANC,eAQpB,GAAMC,CAAAA,oBAAoB,CAAE,QAAtBA,CAAAA,oBAAsB,EAAI,CAC9BD,cAAc,CAAC,IAAD,CAAd,CACD,CAFD,CAIA,GAAME,CAAAA,qBAAqB,CAAE,QAAvBA,CAAAA,qBAAuB,EAAI,CAC/BF,cAAc,CAAC,KAAD,CAAd,CACAF,WAAW,CAAC,IAAD,CAAX,CACAF,OAAO,CAAC,KAAD,CAAP,CACD,CAJD,CAMA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,IAAI,CAAI,CACzB,GAAIA,IAAJ,CAAU,CACRR,OAAO,CAAC,IAAD,CAAP,CACAE,WAAW,CAACM,IAAD,CAAX,CACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACAH,oBAAoB,GACrB,CACF,CAPD,CASA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,GAAG,CAAI,CACzBH,OAAO,CAACI,KAAR,CAAcD,GAAd,EACD,CAFD,CAIA,mBACE,aAAK,EAAE,CAAC,SAAR,WAEI,CAACT,WAAD,cACE,KAAC,QAAD,EACE,EAAE,CAAC,QADL,CAEE,KAAK,CAAE,GAFT,CAGE,OAAO,CAAEQ,WAHX,CAIE,MAAM,CAAEJ,UAJV,CAKE,UAAU,CAAE,aALd,CAME,KAAK,CAAE,CAAEO,KAAK,CAAE,MAAT,CANT,EADF,cAUE,cAZN,cAiBA,MAAC,KAAD,EAAO,MAAM,CAAEX,WAAf,CAA4B,EAAE,CAAC,YAA/B,wBACI,eAAQ,OAAO,CAAEG,qBAAjB,eADJ,cAEI,KAAC,UAAD,EAAY,IAAI,CAAEL,QAAlB,CAA4B,WAAW,CAAEE,WAAzC,EAFJ,GAjBA,GADF,CA0BD,CAzDD,CA2DA,cAAeL,CAAAA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport QrReader from 'react-qr-reader';\n\nimport './ScanCard.css';\n\n// BasicModal Component\nimport Modal from \"react-modal\";\n\nimport PersonInfo from '../PersonInfo/PersonInfo';\n\nconst Scanner = () => {\n\n  const [isScanned, setScan] = useState(false);\n\n  const [scanData, setScanData] = useState(null);\n\n  const [modalIsOpen,setModalIsOpen] = useState(false);\n\n  const setModalIsOpenToTrue =()=>{\n    setModalIsOpen(true)\n  }\n\n  const setModalIsOpenToFalse =()=>{\n    setModalIsOpen(false)\n    setScanData(null);\n    setScan(false);\n  }\n \n  const handleScan = data => {\n    if (data) {\n      setScan(true);\n      setScanData(data);\n      console.log(data);\n      setModalIsOpenToTrue();\n    }\n  }\n\n  const handleError = err => {\n    console.error(err)\n  }\n\n  return (\n    <div id=\"scanner\">\n      {\n        !modalIsOpen ?\n          <QrReader\n            id=\"reader\"\n            delay={300}\n            onError={handleError}\n            onScan={handleScan}\n            facingMode={\"environment\"}\n            style={{ width: '100%' }}\n          />\n        :\n          <div>\n          </div>\n\n      }\n\n    <Modal isOpen={modalIsOpen} id=\"scan-modal\">\n        <button onClick={setModalIsOpenToFalse}>x</button>\n        <PersonInfo scan={scanData} modalIsOpen={modalIsOpen}/>\n    </Modal>\n\n      \n    </div>\n  )\n}\n\nexport default Scanner;"]},"metadata":{},"sourceType":"module"}