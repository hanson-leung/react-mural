{"ast":null,"code":"var _jsxFileName = \"/Users/hdewey/Documents/repos/IYA/react-mural/src/components/Cards/PersonInfo/PersonInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport People from '../../assets/people';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PersonInfo = props => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [imgPath, setImgPath] = useState(null);\n  useEffect(() => {\n    if (user) {\n      setImgPath();\n    }\n  });\n  useEffect(() => {\n    if (props.modalIsOpen) {\n      let parsedScan = props.scan.toLowerCase();\n      parsedScan = parsedScan.includes(' ') ? parsedScan.replace(/\\s/g, '-') : parsedScan;\n      const text = parsedScan;\n      scanToPerson(text);\n    }\n  });\n\n  const scanToPerson = text => {\n    for (let i = 0; i < People.length; i++) {\n      let nameToMatch = People[i].name.replace(/\\s/g, '-').toLowerCase();\n\n      if (text == nameToMatch) {\n        setUser(People[i]);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + '/headshots/' + imgPath + '.jpg',\n        className: \"headshot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PersonInfo, \"vuM13LuipX/r8FVspsjeu4YxMw0=\");\n\n_c = PersonInfo;\nexport default PersonInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonInfo\");","map":{"version":3,"sources":["/Users/hdewey/Documents/repos/IYA/react-mural/src/components/Cards/PersonInfo/PersonInfo.js"],"names":["React","useState","useEffect","People","PersonInfo","props","user","setUser","imgPath","setImgPath","modalIsOpen","parsedScan","scan","toLowerCase","includes","replace","text","scanToPerson","i","length","nameToMatch","name","process","env","PUBLIC_URL","bio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACf,QAAII,IAAJ,EAAU;AACRG,MAAAA,UAAU;AACX;AACF,GAJQ,CAAT;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAK,CAACK,WAAV,EAAuB;AAErB,UAAIC,UAAU,GAAGN,KAAK,CAACO,IAAN,CAAWC,WAAX,EAAjB;AACAF,MAAAA,UAAU,GAAGA,UAAU,CAACG,QAAX,CAAoB,GAApB,IAA2BH,UAAU,CAACI,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAA3B,GAA4DJ,UAAzE;AAEA,YAAMK,IAAI,GAAGL,UAAb;AACAM,MAAAA,YAAY,CAACD,IAAD,CAAZ;AACD;AACF,GATQ,CAAT;;AAWA,QAAMC,YAAY,GAAID,IAAD,IAAU;AAC7B,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,MAAM,CAACgB,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAIE,WAAW,GAAGjB,MAAM,CAACe,CAAD,CAAN,CAAUG,IAAV,CAAeN,OAAf,CAAuB,KAAvB,EAA8B,GAA9B,EAAmCF,WAAnC,EAAlB;;AACA,UAAIG,IAAI,IAAII,WAAZ,EAAyB;AACvBb,QAAAA,OAAO,CAACJ,MAAM,CAACe,CAAD,CAAP,CAAP;AACD;AACF;AACF,GAPD;;AAaA,sBACE;AAAA,cAGIZ,IAAI,gBACF;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEgB,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,aAAzB,GAAyChB,OAAzC,GAAmD,MAA7D;AAAqE,QAAA,SAAS,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKF,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIf,IAAI,CAACmB;AAAT;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADE,GAOF;AAVN;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApDD;;GAAMrB,U;;KAAAA,U;AAsDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport People from '../../assets/people';\n\nconst PersonInfo = (props) => {\n\n  const [user, setUser] = useState(null);\n\n  const [imgPath, setImgPath] = useState(null);\n\n  useEffect( () => {\n    if (user) {\n      setImgPath()\n    }\n  })\n\n  useEffect(() => {\n    if (props.modalIsOpen) {\n\n      let parsedScan = props.scan.toLowerCase();\n      parsedScan = parsedScan.includes(' ') ? parsedScan.replace(/\\s/g, '-') : parsedScan;\n  \n      const text = parsedScan;\n      scanToPerson(text);\n    }\n  })\n\n  const scanToPerson = (text) => {\n    for (let i = 0; i < People.length; i++) {\n      let nameToMatch = People[i].name.replace(/\\s/g, '-').toLowerCase();\n      if (text == nameToMatch) {\n        setUser(People[i]);\n      }\n    }\n  }\n\n  \n\n\n\n  return (\n    <div>\n\n      {\n        user ?\n          <>\n            <img src={process.env.PUBLIC_URL + '/headshots/' + imgPath + '.jpg'} className=\"headshot\" />\n            <h1>{user.name}</h1>\n            <p>{user.bio}</p>\n          </>\n        :\n          ''\n      }\n      \n    </div>\n  )\n}\n\nexport default PersonInfo"]},"metadata":{},"sourceType":"module"}