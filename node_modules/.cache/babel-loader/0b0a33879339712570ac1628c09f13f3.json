{"ast":null,"code":"var _jsxFileName = \"/Users/hdewey/Documents/repos/IYA/react-mural/src/components/Cards/Scan/Scanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport QrReader from 'react-qr-reader';\nimport FocusedPerson from '../FocusedPersonModal/FocusedPersonModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scanner = () => {\n  _s();\n\n  const [isScanned, setScan] = useState(false);\n  const [focusedPerson, setFocusedPerson] = useState(null);\n\n  const handleScan = data => {\n    if (data) {\n      setScan(true);\n      setFocusedPerson(data);\n      console.log(data);\n    }\n  };\n\n  const handleError = err => {\n    console.error(err);\n  }; // close modal\n\n\n  const clearScan = () => {\n    if (isScanned) {\n      setScan(false); //\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"scanner\",\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      id: \"reader\",\n      delay: 300,\n      onError: handleError,\n      onScan: handleScan,\n      facingMode: \"environment\",\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FocusedPerson, {\n      display: isScanned ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Scanner, \"mu3jDfThGgJQk8ggaQg/3CM8H5s=\");\n\n_c = Scanner;\nexport default Scanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"sources":["/Users/hdewey/Documents/repos/IYA/react-mural/src/components/Cards/Scan/Scanner.js"],"names":["React","useState","QrReader","FocusedPerson","Scanner","isScanned","setScan","focusedPerson","setFocusedPerson","handleScan","data","console","log","handleError","err","error","clearScan","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,aAAP,MAA0B,0CAA1B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuBL,QAAQ,CAAC,KAAD,CAArC;AAEA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMQ,UAAU,GAAGC,IAAI,IAAI;AACzB,QAAIA,IAAJ,EAAU;AACRJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,gBAAgB,CAACE,IAAD,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;AACF,GAND;;AAOA,QAAMG,WAAW,GAAGC,GAAG,IAAI;AACzBH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,GAFD,CAboB,CAkBpB;;;AACA,QAAME,SAAS,GAAG,MAAM;AACtB,QAAIX,SAAJ,EAAe;AACbC,MAAAA,OAAO,CAAC,KAAD,CAAP,CADa,CAEb;AACD;AACF,GALD;;AAOA,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,KAAK,EAAE,GAFT;AAGE,MAAA,OAAO,EAAEO,WAHX;AAIE,MAAA,MAAM,EAAEJ,UAJV;AAKE,MAAA,UAAU,EAAE,aALd;AAME,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT;AANT;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEZ,SAAS,GAAG,IAAH,GAAU;AAA3C;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCD;;GAAMD,O;;KAAAA,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport QrReader from 'react-qr-reader';\n\nimport FocusedPerson from '../FocusedPersonModal/FocusedPersonModal';\n\nconst Scanner = () => {\n\n  const [isScanned, setScan] = useState(false);\n\n  const [focusedPerson, setFocusedPerson] = useState(null);\n \n  const handleScan = data => {\n    if (data) {\n      setScan(true);\n      setFocusedPerson(data);\n      console.log(data);\n    }\n  }\n  const handleError = err => {\n    console.error(err)\n  }\n\n\n  // close modal\n  const clearScan = () => {\n    if (isScanned) {\n      setScan(false);\n      //\n    }\n  }\n\n  return (\n    <div id=\"scanner\">\n      <QrReader\n        id=\"reader\"\n        delay={300}\n        onError={handleError}\n        onScan={handleScan}\n        facingMode={\"environment\"}\n        style={{ width: '100%' }}\n      />\n      <FocusedPerson display={isScanned ? true : false} />\n    </div>\n  )\n}\n\nexport default Scanner;"]},"metadata":{},"sourceType":"module"}