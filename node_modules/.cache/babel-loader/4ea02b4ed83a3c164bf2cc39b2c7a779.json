{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { defer, startDragHandler } from './utils';\nimport { OVERLAY_CLASS_NAME, CLASS_NAME } from './constants';\n\nconst PortalBody = ({\n  children,\n  isOpen,\n  close,\n  allowClickOutside,\n  draggable\n}) => {\n  const [overlayClass, setOverlayClass] = useState(OVERLAY_CLASS_NAME.BASE);\n  const [modalClass, setModalClass] = useState(CLASS_NAME.BASE);\n  const modalRef = useRef(null);\n  const overlayClickHandler = useCallback(({\n    target\n  }) => {\n    var _a;\n\n    if (((_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.contains(target)) || !allowClickOutside) return;\n    close();\n  }, []);\n  const modalDragHandler = useCallback(e => {\n    if (!draggable) return;\n    startDragHandler(e);\n  }, []);\n  useEffect(() => {\n    (() => __awaiter(void 0, void 0, void 0, function* () {\n      if (isOpen) {\n        yield defer(30);\n        setOverlayClass(overlayClass => `${overlayClass} ${OVERLAY_CLASS_NAME.AFTER_OPEN}`);\n        setModalClass(modalClass => `${modalClass} ${CLASS_NAME.AFTER_OPEN}`);\n      } else {\n        setOverlayClass(overlayClass => `${overlayClass} ${OVERLAY_CLASS_NAME.BEFORE_CLOSE}`);\n        setModalClass(modalClass => `${modalClass} ${CLASS_NAME.BEFORE_CLOSE}`);\n      }\n    }))();\n  }, [isOpen]);\n  return _jsx(\"div\", Object.assign({\n    className: overlayClass,\n    onClick: overlayClickHandler\n  }, {\n    children: _jsx(\"div\", Object.assign({\n      className: modalClass,\n      onMouseDown: modalDragHandler,\n      ref: modalRef\n    }, {\n      children: _jsx(\"div\", {\n        children: children\n      }, void 0)\n    }), void 0)\n  }), void 0);\n};\n\nexport default PortalBody;","map":{"version":3,"sources":["/Users/hdewey/Documents/repos/IYA/react-mural/node_modules/react-simple-modal-provider/dist/PortalBody.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","jsx","_jsx","useState","useEffect","useRef","useCallback","defer","startDragHandler","OVERLAY_CLASS_NAME","CLASS_NAME","PortalBody","children","isOpen","close","allowClickOutside","draggable","overlayClass","setOverlayClass","BASE","modalClass","setModalClass","modalRef","overlayClickHandler","target","_a","current","contains","modalDragHandler","AFTER_OPEN","BEFORE_CLOSE","Object","assign","className","onClick","onMouseDown","ref"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { defer, startDragHandler } from './utils';\nimport { OVERLAY_CLASS_NAME, CLASS_NAME } from './constants';\nconst PortalBody = ({ children, isOpen, close, allowClickOutside, draggable }) => {\n    const [overlayClass, setOverlayClass] = useState(OVERLAY_CLASS_NAME.BASE);\n    const [modalClass, setModalClass] = useState(CLASS_NAME.BASE);\n    const modalRef = useRef(null);\n    const overlayClickHandler = useCallback(({ target }) => {\n        var _a;\n        if (((_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.contains(target)) || !allowClickOutside)\n            return;\n        close();\n    }, []);\n    const modalDragHandler = useCallback((e) => {\n        if (!draggable)\n            return;\n        startDragHandler(e);\n    }, []);\n    useEffect(() => {\n        (() => __awaiter(void 0, void 0, void 0, function* () {\n            if (isOpen) {\n                yield defer(30);\n                setOverlayClass((overlayClass) => `${overlayClass} ${OVERLAY_CLASS_NAME.AFTER_OPEN}`);\n                setModalClass((modalClass) => `${modalClass} ${CLASS_NAME.AFTER_OPEN}`);\n            }\n            else {\n                setOverlayClass((overlayClass) => `${overlayClass} ${OVERLAY_CLASS_NAME.BEFORE_CLOSE}`);\n                setModalClass((modalClass) => `${modalClass} ${CLASS_NAME.BEFORE_CLOSE}`);\n            }\n        }))();\n    }, [isOpen]);\n    return (_jsx(\"div\", Object.assign({ className: overlayClass, onClick: overlayClickHandler }, { children: _jsx(\"div\", Object.assign({ className: modalClass, onMouseDown: modalDragHandler, ref: modalRef }, { children: _jsx(\"div\", { children: children }, void 0) }), void 0) }), void 0));\n};\nexport default PortalBody;\n"]},"metadata":{},"sourceType":"module"}