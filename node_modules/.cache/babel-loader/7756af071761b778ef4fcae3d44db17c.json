{"ast":null,"code":"import _slicedToArray from\"/Users/hdewey/Documents/repos/IYA/react-mural/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import People from'../../assets/people';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PersonInfo=function PersonInfo(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),imgPath=_useState4[0],setImgPath=_useState4[1];useEffect(function(){if(props.modalIsOpen){var parsedScan=props.scan.toLowerCase();parsedScan=parsedScan.includes(' ')?parsedScan.replace(/\\s/g,'-'):parsedScan;var text=parsedScan;scanToPerson(text);}});var scanToPerson=function scanToPerson(text){for(var i=0;i<People.length;i++){var nameToMatch=People[i].name.replace(/\\s/g,'-').toLowerCase();if(text==nameToMatch){setUser(People[i]);}}};useEffect(function(){if(user){var lastIndex=user.name.lastIndexOf(\" \");var imagePath=user.name.toLowerCase().substring(0,lastIndex);setImgPath(imagePath);}});return/*#__PURE__*/_jsx(\"div\",{children:user?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{src:process.env.PUBLIC_URL+'/headshots/'+imgPath+'.jpg',className:\"headshot\"}),/*#__PURE__*/_jsx(\"h1\",{children:user.name}),/*#__PURE__*/_jsx(\"p\",{children:user.bio})]}):''});};export default PersonInfo;","map":{"version":3,"sources":["/Users/hdewey/Documents/repos/IYA/react-mural/src/components/Cards/PersonInfo/PersonInfo.js"],"names":["React","useState","useEffect","People","PersonInfo","props","user","setUser","imgPath","setImgPath","modalIsOpen","parsedScan","scan","toLowerCase","includes","replace","text","scanToPerson","i","length","nameToMatch","name","lastIndex","lastIndexOf","imagePath","substring","process","env","PUBLIC_URL","bio"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,eAEJJ,QAAQ,CAAC,IAAD,CAFJ,wCAErBK,IAFqB,eAEfC,OAFe,8BAIEN,QAAQ,CAAC,IAAD,CAJV,yCAIrBO,OAJqB,eAIZC,UAJY,eAO5BP,SAAS,CAAC,UAAM,CACd,GAAIG,KAAK,CAACK,WAAV,CAAuB,CAErB,GAAIC,CAAAA,UAAU,CAAGN,KAAK,CAACO,IAAN,CAAWC,WAAX,EAAjB,CACAF,UAAU,CAAGA,UAAU,CAACG,QAAX,CAAoB,GAApB,EAA2BH,UAAU,CAACI,OAAX,CAAmB,KAAnB,CAA0B,GAA1B,CAA3B,CAA4DJ,UAAzE,CAEA,GAAMK,CAAAA,IAAI,CAAGL,UAAb,CACAM,YAAY,CAACD,IAAD,CAAZ,CACD,CACF,CATQ,CAAT,CAWA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,IAAD,CAAU,CAC7B,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGf,MAAM,CAACgB,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtC,GAAIE,CAAAA,WAAW,CAAGjB,MAAM,CAACe,CAAD,CAAN,CAAUG,IAAV,CAAeN,OAAf,CAAuB,KAAvB,CAA8B,GAA9B,EAAmCF,WAAnC,EAAlB,CACA,GAAIG,IAAI,EAAII,WAAZ,CAAyB,CACvBb,OAAO,CAACJ,MAAM,CAACe,CAAD,CAAP,CAAP,CACD,CACF,CACF,CAPD,CASAhB,SAAS,CAAE,UAAM,CACf,GAAII,IAAJ,CAAU,CACR,GAAMgB,CAAAA,SAAS,CAAGhB,IAAI,CAACe,IAAL,CAAUE,WAAV,CAAsB,GAAtB,CAAlB,CACA,GAAMC,CAAAA,SAAS,CAAGlB,IAAI,CAACe,IAAL,CAAUR,WAAV,GAAwBY,SAAxB,CAAkC,CAAlC,CAAqCH,SAArC,CAAlB,CACAb,UAAU,CAACe,SAAD,CAAV,CACD,CACF,CANQ,CAAT,CAUA,mBACE,qBAGIlB,IAAI,cACF,wCACE,YAAK,GAAG,CAAEoB,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAyB,aAAzB,CAAyCpB,OAAzC,CAAmD,MAA7D,CAAqE,SAAS,CAAC,UAA/E,EADF,cAEE,oBAAKF,IAAI,CAACe,IAAV,EAFF,cAGE,mBAAIf,IAAI,CAACuB,GAAT,EAHF,GADE,CAOF,EAVN,EADF,CAgBD,CArDD,CAuDA,cAAezB,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport People from '../../assets/people';\n\nconst PersonInfo = (props) => {\n\n  const [user, setUser] = useState(null);\n\n  const [imgPath, setImgPath] = useState(null);\n\n\n  useEffect(() => {\n    if (props.modalIsOpen) {\n\n      let parsedScan = props.scan.toLowerCase();\n      parsedScan = parsedScan.includes(' ') ? parsedScan.replace(/\\s/g, '-') : parsedScan;\n  \n      const text = parsedScan;\n      scanToPerson(text);\n    }\n  })\n\n  const scanToPerson = (text) => {\n    for (let i = 0; i < People.length; i++) {\n      let nameToMatch = People[i].name.replace(/\\s/g, '-').toLowerCase();\n      if (text == nameToMatch) {\n        setUser(People[i]);\n      }\n    }\n  }\n\n  useEffect( () => {\n    if (user) {\n      const lastIndex = user.name.lastIndexOf(\" \");\n      const imagePath = user.name.toLowerCase().substring(0, lastIndex);\n      setImgPath(imagePath);\n    }\n  })\n\n\n\n  return (\n    <div>\n\n      {\n        user ?\n          <>\n            <img src={process.env.PUBLIC_URL + '/headshots/' + imgPath + '.jpg'} className=\"headshot\" />\n            <h1>{user.name}</h1>\n            <p>{user.bio}</p>\n          </>\n        :\n          ''\n      }\n      \n    </div>\n  )\n}\n\nexport default PersonInfo"]},"metadata":{},"sourceType":"module"}