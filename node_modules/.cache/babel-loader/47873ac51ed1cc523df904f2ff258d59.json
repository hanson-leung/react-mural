{"ast":null,"code":"var _jsxFileName = \"/Users/hdewey/Documents/repos/IYA/react-mural/src/components/Cards/PersonInfo/PersonInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport People from '../../assets/people';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PersonInfo = props => {\n  _s();\n\n  const [user, setUser] = useState(null);\n\n  if (props.modalIsOpen) {\n    let parsedScan = props.scan.toLowerCase();\n    parsedScan = parsedScan.includes(/\\s/g) ? parsedScan.replace(/\\s/g, '-') : parsedScan;\n    const text = parsedScan;\n    scanToPerson(text);\n  }\n\n  const scanToPerson = text => {\n    for (let i = 0; i < People.length; i++) {\n      let nameToMatch = People[i].name.replace(/\\s/g, '-').toLowerCase();\n\n      if (text == nameToMatch) {\n        setUser(People[i]);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PersonInfo, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n\n_c = PersonInfo;\nexport default PersonInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonInfo\");","map":{"version":3,"sources":["/Users/hdewey/Documents/repos/IYA/react-mural/src/components/Cards/PersonInfo/PersonInfo.js"],"names":["React","useState","useEffect","People","PersonInfo","props","user","setUser","modalIsOpen","parsedScan","scan","toLowerCase","includes","replace","text","scanToPerson","i","length","nameToMatch","name","bio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;;AAEA,MAAII,KAAK,CAACG,WAAV,EAAuB;AAEvB,QAAIC,UAAU,GAAGJ,KAAK,CAACK,IAAN,CAAWC,WAAX,EAAjB;AACAF,IAAAA,UAAU,GAAGA,UAAU,CAACG,QAAX,CAAoB,KAApB,IAA6BH,UAAU,CAACI,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAA7B,GAA8DJ,UAA3E;AAEA,UAAMK,IAAI,GAAGL,UAAb;AAGEM,IAAAA,YAAY,CAACD,IAAD,CAAZ;AACD;;AAGD,QAAMC,YAAY,GAAID,IAAD,IAAU;AAC7B,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,MAAM,CAACc,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAIE,WAAW,GAAGf,MAAM,CAACa,CAAD,CAAN,CAAUG,IAAV,CAAeN,OAAf,CAAuB,KAAvB,EAA8B,GAA9B,EAAmCF,WAAnC,EAAlB;;AACA,UAAIG,IAAI,IAAII,WAAZ,EAAyB;AACvBX,QAAAA,OAAO,CAACJ,MAAM,CAACa,CAAD,CAAP,CAAP;AACD;AACF;AACF,GAPD;;AASA,sBACE;AAAA,cAGIV,IAAI,gBACF;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIb,IAAI,CAACc;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADE,GAMF;AATN;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxCD;;GAAMhB,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport People from '../../assets/people';\n\nconst PersonInfo = (props) => {\n\n  const [user, setUser] = useState(null);\n\n  if (props.modalIsOpen) {\n\n  let parsedScan = props.scan.toLowerCase();\n  parsedScan = parsedScan.includes(/\\s/g) ? parsedScan.replace(/\\s/g, '-') : parsedScan;\n\n  const text = parsedScan;\n\n\n    scanToPerson(text);\n  }\n\n\n  const scanToPerson = (text) => {\n    for (let i = 0; i < People.length; i++) {\n      let nameToMatch = People[i].name.replace(/\\s/g, '-').toLowerCase();\n      if (text == nameToMatch) {\n        setUser(People[i]);\n      }\n    }\n  }\n\n  return (\n    <div>\n\n      {\n        user ?\n          <>\n            <h1>{user.name}</h1>\n            <p>{user.bio}</p>\n          </>\n        :\n          ''\n      }\n      \n    </div>\n  )\n}\n\nexport default PersonInfo"]},"metadata":{},"sourceType":"module"}