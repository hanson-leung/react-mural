{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useCallback, useEffect, useMemo } from 'react';\nimport { createModalContext } from './modalContext';\nimport { modalAnimation } from './modalAnimation';\nimport { checkRequiredProps, checkCustomStyle, hash, getModalStyle, checkPropsCondition } from './utils';\nimport Portal from './Portal';\n\nconst Modal = ({\n  children,\n  id,\n  consumer,\n  isOpen,\n  setOpen,\n  allowClickOutside = true,\n  duration = 0,\n  overlayColor = 'rgba(0, 0, 0, 0.6)',\n  animation = {\n    type: '',\n    base: '',\n    before: '',\n    after: ''\n  },\n  vertical = 0,\n  horizontal = 0,\n  width = 0,\n  height = 0,\n  radius = 0,\n  backgroundColor = 'transparent',\n  asyncOpen,\n  spinner,\n  spinnerColor = 'rgba(45, 52, 54, 0.6)',\n  draggable = false\n}) => {\n  duration = (animation === null || animation === void 0 ? void 0 : animation.type) && !duration ? 150 : duration;\n  if (draggable && animation.type.match(/top|bottom|left|right/)) animation = modalAnimation.scaleUp;\n  useEffect(() => {\n    checkRequiredProps({\n      id,\n      consumer,\n      isOpen,\n      setOpen\n    });\n    checkCustomStyle({\n      id,\n      width,\n      height,\n      backgroundColor\n    });\n  }, []);\n  const hashId = hash(id);\n  const [Context, ContextProps] = useMemo(() => createModalContext(id), []);\n  const [initialization, setInitialization] = useState(false);\n  const [pending, setPending] = useState(false);\n  const [customProps, setCustomProps] = useState({});\n  const setCustomPropsWithCheckPropsCondition = useCallback(props => {\n    if (checkPropsCondition(props)) return setCustomProps(props);\n    setCustomProps({});\n  }, [customProps]);\n  const open = useCallback(props => __awaiter(void 0, void 0, void 0, function* () {\n    setOpen(true);\n    setCustomPropsWithCheckPropsCondition(props);\n    if (!initialization) setInitialization(true);\n    if (!asyncOpen) return;\n    setPending(true);\n    yield asyncOpen();\n    setPending(false);\n  }), [customProps]);\n  const close = useCallback(() => setOpen(false), []);\n  const keyUpHandler = useCallback(({\n    key\n  }) => {\n    if (key !== 'Escape') return;\n    if ([...modalSet][modalSet.size - 1] !== id) return;\n    close();\n  }, []);\n  useEffect(() => {\n    if (!isOpen) return window.removeEventListener('keyup', keyUpHandler);\n    window.addEventListener('keyup', keyUpHandler);\n    modalSet.add(id);\n  }, [isOpen]);\n  const providerValues = useMemo(() => ({\n    open,\n    close\n  }), []);\n  const propsProviderValues = useMemo(() => Object.assign({}, customProps), [customProps]);\n  return _jsx(ContextProps.Provider, Object.assign({\n    value: propsProviderValues\n  }, {\n    children: _jsxs(Context.Provider, Object.assign({\n      value: providerValues\n    }, {\n      children: [consumer, _jsx(Portal, Object.assign({\n        id: id,\n        hashId: hashId,\n        modalSet: modalSet,\n        initialization: initialization,\n        pending: pending,\n        isOpen: isOpen,\n        close: close,\n        allowClickOutside: allowClickOutside,\n        spinner: spinner,\n        spinnerColor: spinnerColor,\n        duration: duration,\n        modalStyle: getModalStyle({\n          hashId,\n          duration,\n          overlayColor,\n          vertical,\n          horizontal,\n          animation,\n          width,\n          height,\n          radius,\n          backgroundColor\n        }),\n        draggable: draggable\n      }, {\n        children: children\n      }), void 0)]\n    }), void 0)\n  }), void 0);\n};\n\nconst modalSet = new Set();\nexport default Modal;","map":{"version":3,"sources":["/Users/hdewey/Documents/repos/IYA/react-mural/node_modules/react-simple-modal-provider/dist/Modal.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","jsx","_jsx","jsxs","_jsxs","useState","useCallback","useEffect","useMemo","createModalContext","modalAnimation","checkRequiredProps","checkCustomStyle","hash","getModalStyle","checkPropsCondition","Portal","Modal","children","id","consumer","isOpen","setOpen","allowClickOutside","duration","overlayColor","animation","type","base","before","after","vertical","horizontal","width","height","radius","backgroundColor","asyncOpen","spinner","spinnerColor","draggable","match","scaleUp","hashId","Context","ContextProps","initialization","setInitialization","pending","setPending","customProps","setCustomProps","setCustomPropsWithCheckPropsCondition","props","open","close","keyUpHandler","key","modalSet","size","window","removeEventListener","addEventListener","add","providerValues","propsProviderValues","Object","assign","Provider","modalStyle","Set"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useCallback, useEffect, useMemo } from 'react';\nimport { createModalContext } from './modalContext';\nimport { modalAnimation } from './modalAnimation';\nimport { checkRequiredProps, checkCustomStyle, hash, getModalStyle, checkPropsCondition } from './utils';\nimport Portal from './Portal';\nconst Modal = ({ children, id, consumer, isOpen, setOpen, allowClickOutside = true, duration = 0, overlayColor = 'rgba(0, 0, 0, 0.6)', animation = { type: '', base: '', before: '', after: '' }, vertical = 0, horizontal = 0, width = 0, height = 0, radius = 0, backgroundColor = 'transparent', asyncOpen, spinner, spinnerColor = 'rgba(45, 52, 54, 0.6)', draggable = false, }) => {\n    duration = (animation === null || animation === void 0 ? void 0 : animation.type) && !duration ? 150 : duration;\n    if (draggable && animation.type.match(/top|bottom|left|right/))\n        animation = modalAnimation.scaleUp;\n    useEffect(() => {\n        checkRequiredProps({ id, consumer, isOpen, setOpen });\n        checkCustomStyle({ id, width, height, backgroundColor });\n    }, []);\n    const hashId = hash(id);\n    const [Context, ContextProps] = useMemo(() => createModalContext(id), []);\n    const [initialization, setInitialization] = useState(false);\n    const [pending, setPending] = useState(false);\n    const [customProps, setCustomProps] = useState({});\n    const setCustomPropsWithCheckPropsCondition = useCallback((props) => {\n        if (checkPropsCondition(props))\n            return setCustomProps(props);\n        setCustomProps({});\n    }, [customProps]);\n    const open = useCallback((props) => __awaiter(void 0, void 0, void 0, function* () {\n        setOpen(true);\n        setCustomPropsWithCheckPropsCondition(props);\n        if (!initialization)\n            setInitialization(true);\n        if (!asyncOpen)\n            return;\n        setPending(true);\n        yield asyncOpen();\n        setPending(false);\n    }), [customProps]);\n    const close = useCallback(() => setOpen(false), []);\n    const keyUpHandler = useCallback(({ key }) => {\n        if (key !== 'Escape')\n            return;\n        if ([...modalSet][modalSet.size - 1] !== id)\n            return;\n        close();\n    }, []);\n    useEffect(() => {\n        if (!isOpen)\n            return window.removeEventListener('keyup', keyUpHandler);\n        window.addEventListener('keyup', keyUpHandler);\n        modalSet.add(id);\n    }, [isOpen]);\n    const providerValues = useMemo(() => ({\n        open,\n        close,\n    }), []);\n    const propsProviderValues = useMemo(() => (Object.assign({}, customProps)), [customProps]);\n    return (_jsx(ContextProps.Provider, Object.assign({ value: propsProviderValues }, { children: _jsxs(Context.Provider, Object.assign({ value: providerValues }, { children: [consumer,\n                _jsx(Portal, Object.assign({ id: id, hashId: hashId, modalSet: modalSet, initialization: initialization, pending: pending, isOpen: isOpen, close: close, allowClickOutside: allowClickOutside, spinner: spinner, spinnerColor: spinnerColor, duration: duration, modalStyle: getModalStyle({\n                        hashId,\n                        duration,\n                        overlayColor,\n                        vertical,\n                        horizontal,\n                        animation,\n                        width,\n                        height,\n                        radius,\n                        backgroundColor,\n                    }), draggable: draggable }, { children: children }), void 0)] }), void 0) }), void 0));\n};\nconst modalSet = new Set();\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}