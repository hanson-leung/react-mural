import { IAnimation } from './type';
declare const $: (selector: string, parent?: HTMLElement | Document) => Element | null;
declare const stateBundler: <T>(setFuncArr: Function[] | undefined, willState: T) => void;
declare const hash: (id: string) => string;
declare const defer: (ms: number) => Promise<unknown>;
declare const checkRequiredProps: ({ id, consumer, isOpen, setOpen, }: {
    id: string;
    consumer: React.ReactNode;
    isOpen: boolean;
    setOpen: Function;
}) => void;
declare const getModalStyle: ({ hashId, duration, vertical, horizontal, width, height, radius, overlayColor, backgroundColor, animation, }: {
    hashId: string;
    duration: number;
    vertical: number;
    horizontal: number;
    width: number;
    height: number;
    radius: number;
    overlayColor: string;
    backgroundColor: string;
    animation: IAnimation;
}) => string;
declare const throttle: (callback: Function, waitTime: number) => (e: Event) => void;
declare const startDragHandler: (e: React.MouseEvent<HTMLDivElement>) => void;
declare const checkPropsCondition: (props: {}) => boolean;
declare const checkCustomStyle: ({ id, width, height, backgroundColor, }: {
    id: string;
    width: number;
    height: number;
    backgroundColor: string;
}) => void;
export { $, stateBundler, hash, defer, checkRequiredProps, getModalStyle, throttle, startDragHandler, checkPropsCondition, checkCustomStyle, };
