import { createContext, useContext } from 'react';
import { ERROR_MESSAGES } from './constants';
const createModalContext = (id) => {
    if (!id)
        throw new Error(ERROR_MESSAGES.MODAL_ID_INVALID_FROM_CONTEXT(id));
    if (contextMap.has(id))
        return contextMap.get(id);
    const context = createContext({});
    const contextProps = createContext({});
    contextMap.set(id, context);
    contextPropsMap.set(id, contextProps);
    return [context, contextProps];
};
const useModal = (id) => {
    if (!id)
        throw new Error(ERROR_MESSAGES.MODAL_ID_INVALID_FROM(id, 'useModal'));
    if (!contextMap.has(id))
        throw new Error(ERROR_MESSAGES.MODAL_ID_NOT_EXIST(id, 'useModal'));
    return useContext(contextMap.get(id));
};
const useModalProps = (id) => {
    if (!id)
        throw new Error(ERROR_MESSAGES.MODAL_ID_INVALID_FROM(id, 'useModalProps'));
    if (!contextPropsMap.has(id))
        throw new Error(ERROR_MESSAGES.MODAL_ID_NOT_EXIST(id, 'useModalProps'));
    return useContext(contextPropsMap.get(id));
};
const contextMap = new Map();
const contextPropsMap = new Map();
export { createModalContext, useModal, useModalProps };
